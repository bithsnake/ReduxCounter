{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    incrementCounter(state) {\n      state.counter++;\n    },\n\n    decrementCounter(state) {\n      state.counter--;\n    },\n\n    increaseCounter(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    resetCounter(state) {\n      state.counter = 0;\n    },\n\n    toggleShowCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport default counterSlice.reducer;","map":{"version":3,"sources":["E:/WEBDEV/ReduxCounter/src/store/counterSlice.js"],"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","incrementCounter","state","decrementCounter","increaseCounter","action","payload","resetCounter","toggleShowCounter","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAGL,mBAFc;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,gBAAgB,CAACD,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,eAAe,CAACF,KAAD,EAAQG,MAAR,EAAgB;AAC3BH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,YAAY,CAACL,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,CAAhB;AACH,KAZK;;AAaNa,IAAAA,iBAAiB,CAACN,KAAD,EAAQ;AACrBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAfK;AAHmB,CAAD,CAAhC;AAqBA,eAAeC,YAAY,CAACY,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState : initialCounterState,\r\n    reducers: {\r\n        incrementCounter(state) {\r\n            state.counter++;\r\n        },\r\n        decrementCounter(state) {\r\n            state.counter--;\r\n        },\r\n        increaseCounter(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        resetCounter(state) {\r\n            state.counter = 0;\r\n        },\r\n        toggleShowCounter(state) {\r\n            state.showCounter = !state.showCounter\r\n        }        \r\n    }\r\n});\r\nexport default counterSlice.reducer;"]},"metadata":{},"sourceType":"module"}