{"ast":null,"code":"var _jsxFileName = \"E:\\\\WEBDEV\\\\01-starting-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport classes from './Counter.module.css'; // useStore = get access to the whole sotr\n// useSelector get access to a part of a state managed by the store\n// connect is used by classbased components, used as a wrapper of our component to connect the class component to the store\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  /*\n      auto sets up a subscription to the reux store for this component,\n      so the component will be updated and get the latest counter value\n      whenever that data changes in the redux store\n  \n      changes to the reux store causea automatically the cpo,ponent to be re-excecuted\n  \n      react redux also automatically clears the subscription if the component gets unmounted\n   */\n  const counter = useSelector(state => state.counter);\n\n  const toggleCounterhandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterhandler,\n      children: \"Toggle counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"Y7vguJnByGXeD5U4dCX/IxJPE/A=\", false, function () {\n  return [useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["E:/WEBDEV/01-starting-project/src/components/Counter.js"],"names":["useSelector","classes","Counter","counter","state","toggleCounterhandler","value"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,aAA1B;AAEA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;AACA;AACA;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAAMC,OAAO,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;;AAEA,QAAME,oBAAoB,GAAG,MAAM,CAAG,CAAtC;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACK,KAAxB;AAAA,gBAAgCH;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;GAAMH,O;UAUYF,W;;;KAVZE,O;AAuBN,eAAeA,OAAf","sourcesContent":["import {useSelector} from 'react-redux'\n\nimport classes from './Counter.module.css';\n// useStore = get access to the whole sotr\n// useSelector get access to a part of a state managed by the store\n// connect is used by classbased components, used as a wrapper of our component to connect the class component to the store\n\nconst Counter = () => {\n/*\n    auto sets up a subscription to the reux store for this component,\n    so the component will be updated and get the latest counter value\n    whenever that data changes in the redux store\n\n    changes to the reux store causea automatically the cpo,ponent to be re-excecuted\n\n    react redux also automatically clears the subscription if the component gets unmounted\n */\n  const counter = useSelector(state => state.counter); \n\n  const toggleCounterhandler = () => { }\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <button onClick={toggleCounterhandler}>Toggle counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}