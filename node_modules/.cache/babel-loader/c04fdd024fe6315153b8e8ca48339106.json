{"ast":null,"code":"var _jsxFileName = \"E:\\\\WEBDEV\\\\01-starting-project\\\\src\\\\store\\\\index.js\";\nimport React from 'react';\nimport { createStore } from 'redux'; // the logic in the reducer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'increment':\n      return {\n        counter: state.counter + 1\n      };\n\n    case 'decrement':\n      return {\n        counter: state.counter - 1\n      };\n\n    default:\n      return state;\n  }\n}; //the store/context\n\n\nconst store = createStore(counterReducer); //the latest state\n\nconst counterSubscriber = () => {\n  const latestState = store.getState();\n  console.log(latestState);\n}; //the subscriber\n\n\nstore.subscribe(counterSubscriber); //do the actions\n\nstore.dispatch('increment');\nstore.dispatch('increment');\nstore.dispatch('increment');\nstore.dispatch('increment');\nstore.dispatch('decrement');\n\nconst index = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nexport default index;","map":{"version":3,"sources":["E:/WEBDEV/01-starting-project/src/store/index.js"],"names":["React","createStore","counterReducer","state","counter","action","type","store","counterSubscriber","latestState","getState","console","log","subscribe","dispatch","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B,C,CAEA;;;;AACA,MAAMC,cAAc,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA3B;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAA2B;AAAA,MAAXC,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AACHF,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AADtB,OAAP;;AAGJ,SAAK,WAAL;AACI,aAAO;AACHA,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAe;AADrB,OAAP;;AAGJ;AAAS,aAAOD,KAAP;AATb;AAWH,CAZD,C,CAaA;;;AACA,MAAMI,KAAK,GAAGN,WAAW,CAACC,cAAD,CAAzB,C,CACA;;AACA,MAAMM,iBAAiB,GAAG,MAAM;AAC5B,QAAMC,WAAW,GAAGF,KAAK,CAACG,QAAN,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH,CAHD,C,CAIA;;;AACAF,KAAK,CAACM,SAAN,CAAgBL,iBAAhB,E,CAEA;;AACAD,KAAK,CAACO,QAAN,CAAe,WAAf;AACAP,KAAK,CAACO,QAAN,CAAe,WAAf;AACAP,KAAK,CAACO,QAAN,CAAe,WAAf;AACAP,KAAK,CAACO,QAAN,CAAe,WAAf;AACAP,KAAK,CAACO,QAAN,CAAe,WAAf;;AACA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;AAQA,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport {createStore} from 'redux';\r\n\r\n// the logic in the reducer\r\nconst counterReducer = (state = { counter: 0 }, action) => {\r\n    switch (action.type) {\r\n        case 'increment':\r\n            return {\r\n                counter: state.counter + 1,\r\n            }\r\n        case 'decrement':\r\n            return {\r\n                counter :state.counter -1,\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n//the store/context\r\nconst store = createStore(counterReducer);\r\n//the latest state\r\nconst counterSubscriber = () => {\r\n    const latestState = store.getState();\r\n    console.log(latestState);\r\n}\r\n//the subscriber\r\nstore.subscribe(counterSubscriber);\r\n\r\n//do the actions\r\nstore.dispatch('increment');\r\nstore.dispatch('increment');\r\nstore.dispatch('increment');\r\nstore.dispatch('increment');\r\nstore.dispatch('decrement');\r\nconst index = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index\r\n"]},"metadata":{},"sourceType":"module"}