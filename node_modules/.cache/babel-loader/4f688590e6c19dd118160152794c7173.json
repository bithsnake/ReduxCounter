{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    incrementCounter(state) {\n      state.counter++;\n    },\n\n    decrementCounter(state) {\n      state.counter--;\n    },\n\n    increaseCounter(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    resetCounter(state) {\n      state.counter = 0;\n    },\n\n    toggleShowCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducer: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counterReducer: counterSlice.reducer,\n    authenticationReducer: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authaActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["E:/WEBDEV/01-starting-project/src/store/store.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","incrementCounter","state","decrementCounter","increaseCounter","action","payload","resetCounter","toggleShowCounter","initialAuthState","isAuthenticated","authSlice","reducer","login","logout","store","counterReducer","authenticationReducer","counterActions","actions","authaActions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAGA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAGL,mBAFc;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,gBAAgB,CAACD,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,eAAe,CAACF,KAAD,EAAQG,MAAR,EAAgB;AAC3BH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,YAAY,CAACL,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,CAAhB;AACH,KAZK;;AAaNa,IAAAA,iBAAiB,CAACN,KAAD,EAAQ;AACrBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAfK;AAHmB,CAAD,CAAhC;AAsBA,MAAMa,gBAAgB,GAAG;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAzB;AACA,MAAMC,SAAS,GAAGnB,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,gBADoB;AAE1BC,EAAAA,YAAY,EAAEU,gBAFY;AAG1BG,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,CAACX,KAAD,EAAQ;AACTA,MAAAA,KAAK,CAACQ,eAAN,GAAwB,IAAxB;AACH,KAHI;;AAILI,IAAAA,MAAM,CAACZ,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACQ,eAAN,GAAwB,KAAxB;AACH;;AANI;AAHiB,CAAD,CAA7B;AAYA,MAAMK,KAAK,GAAGtB,cAAc,CAAC;AACzBmB,EAAAA,OAAO,EAAE;AACLI,IAAAA,cAAc,EAAEnB,YAAY,CAACe,OADxB;AAELK,IAAAA,qBAAqB,EAAGN,SAAS,CAACC;AAF7B;AADgB,CAAD,CAA5B;AAOA,OAAO,MAAMM,cAAc,GAAGrB,YAAY,CAACsB,OAApC;AACP,OAAO,MAAMC,YAAY,GAAGT,SAAS,CAACQ,OAA/B;AACP,eAAeJ,KAAf","sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState : initialCounterState,\r\n    reducers: {\r\n        incrementCounter(state) {\r\n            state.counter++;\r\n        },\r\n        decrementCounter(state) {\r\n            state.counter--;\r\n        },\r\n        increaseCounter(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        resetCounter(state) {\r\n            state.counter = 0;\r\n        },\r\n        toggleShowCounter(state) {\r\n            state.showCounter = !state.showCounter\r\n        }        \r\n    }\r\n});\r\n\r\nconst initialAuthState = { isAuthenticated: false };\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducer: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n});\r\nconst store = configureStore({\r\n    reducer: {\r\n        counterReducer: counterSlice.reducer,\r\n        authenticationReducer : authSlice.reducer\r\n    }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authaActions = authSlice.actions;\r\nexport default store;"]},"metadata":{},"sourceType":"module"}